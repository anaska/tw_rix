@model login.Models.Search

<div class="search-bar-container">
    @using (Html.BeginForm("Show", "Searches", FormMethod.Post, new { @class = "search" }))
    {
        @Html.AntiForgeryToken()
        @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @placeholder = "Enter search term, language and github user", @autocomplete = "off" } })
        <div class="search-buttons-container">
            @Html.RadioButtonFor(model => model.SearchType, login.Models.SearchType.SourceCode, new { @class = "search-type", @checked = "true" })
            <p>Source Code</p>
            @Html.RadioButtonFor(model => model.SearchType, login.Models.SearchType.Article, new { @class = "search-type" })
            <p>Article</p>
            @Html.RadioButtonFor(model => model.SearchType, login.Models.SearchType.Video, new { @class = "search-type" })
            <p>Video</p>
            @Html.RadioButtonFor(model => model.SearchType, login.Models.SearchType.Slide, new { @class = "search-type" })
            <p>Slide</p>
        </div>
    }
</div>

    <h2>Create</h2>
@switch (Model.SearchType)
{
    case login.Models.SearchType.SourceCode:
        @Html.Partial("SourceCode")
        break;
    case login.Models.SearchType.Article:
        @Html.Partial("Article")
        break;
    case login.Models.SearchType.Slide:
        @Html.Partial("Slide")
        break;
    case login.Models.SearchType.Video:
        @Html.Partial("Video")
        break;        
    default:
        break;
}

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Search</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SearchDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SearchDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SearchDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SearchTerm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SearchFrequency, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SearchFrequency, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SearchFrequency, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
